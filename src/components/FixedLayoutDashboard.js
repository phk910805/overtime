import React, { memo } from 'react';\nimport { timeUtils, dateUtils, holidayUtils } from '../utils';\nimport TimeDisplay from './TimeDisplay';\n\nconst FixedLayoutDashboard = memo(({\n  getAllEmployeesWithRecords,\n  getMonthlyStats,\n  getDailyData,\n  handleTimeInputClick,\n  daysArray,\n  yearMonth,\n  holidays,\n  multiplier\n}) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n      <div className=\"flex\">\n        {/* 고정 영역 */}\n        <div className=\"flex-shrink-0 border-r-2 border-gray-300\">\n          <table className=\"divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"h-12\">\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200 w-20\">\n                  이름\n                </th>\n                <th className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200 w-20\">\n                  초과시간\n                </th>\n                <th className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200 w-20\">\n                  사용시간\n                </th>\n                <th className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200 w-24\">\n                  잔여시간{multiplier !== 1.0 ? ` (${multiplier}배)` : ''}\n                </th>\n                <th className=\"px-2 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider w-16\">\n                  구분\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {getAllEmployeesWithRecords.map((employee) => {\n                const stats = getMonthlyStats(employee.id);\n                \n                return (\n                  <tr key={employee.id} className={employee.isActive ? '' : 'bg-gray-50'}>\n                    <td className={`px-4 py-4 text-sm font-medium text-gray-900 border-r border-gray-200 ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                      {employee.name}\n                      {!employee.isActive && (\n                        <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800\">\n                          삭제\n                        </span>\n                      )}\n                    </td>\n                    <td className={`px-3 py-4 text-sm text-blue-600 border-r border-gray-200 ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                      +{timeUtils.formatTime(stats.totalOvertime)}\n                    </td>\n                    <td className={`px-3 py-4 text-sm text-green-600 border-r border-gray-200 ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                      -{timeUtils.formatTime(stats.totalVacation)}\n                    </td>\n                    <td className={`px-3 py-4 text-sm border-r border-gray-200 ${stats.remaining >= 0 ? 'text-orange-600' : 'text-red-600'} ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                      {stats.remaining >= 0 ? '+' : '-'}{timeUtils.formatTime(Math.abs(stats.remaining))}\n                      {stats.remaining < 0 && '(초과)'}\n                    </td>\n                    <td className={`px-2 py-2 text-center text-xs relative h-20 ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                      <div className=\"absolute left-0 right-0 top-1/2 border-t border-gray-300 transform -translate-y-px\"></div>\n                      <div className=\"flex flex-col h-full\">\n                        <div className=\"h-10 flex items-center justify-center\">\n                          <span className=\"text-blue-600 font-medium\">초과</span>\n                        </div>\n                        <div className=\"h-10 flex items-center justify-center\">\n                          <span className=\"text-green-600 font-medium\">사용</span>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n              {getAllEmployeesWithRecords.length === 0 && (\n                <tr>\n                  <td colSpan={5} className=\"px-6 py-8 text-center text-gray-500\">\n                    등록된 직원이 없습니다. 먼저 직원을 추가해주세요.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* 스크롤 영역 */}\n        <div className=\"flex-1 overflow-x-auto\">\n          <table className=\"w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"h-12\">\n                {daysArray.map((day) => {\n                  const date = new Date(yearMonth[0], yearMonth[1] - 1, day);\n                  const dayOfWeekIndex = date.getDay();\n                  const dayOfWeek = ['일', '월', '화', '수', '목', '금', '토'][dayOfWeekIndex];\n                  const dateString = dateUtils.formatDateString(yearMonth[0], yearMonth[1], day);\n                  const isHolidayDate = holidayUtils.isHoliday(dateString, holidays);\n                  \n                  let textColor = 'text-gray-500';\n                  if (isHolidayDate || dayOfWeekIndex === 0 || dayOfWeekIndex === 6) {\n                    textColor = 'text-violet-600';\n                  }\n                  \n                  return (\n                    <th key={day} className={`px-2 py-3 text-center text-xs font-medium ${textColor} uppercase tracking-wider w-16 bg-gray-50`}>\n                      <div className=\"flex flex-col items-center justify-center h-full\">\n                        <div className=\"flex-shrink-0\">\n                          {day.toString().padStart(2, '0')}({dayOfWeek})\n                        </div>\n                        {isHolidayDate && (\n                          <div className=\"text-[10px] text-gray-400 normal-case leading-tight mt-0.5\">\n                            {holidayUtils.getHolidayName(dateString, holidays)}\n                          </div>\n                        )}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {getAllEmployeesWithRecords.map((employee) => {\n                return (\n                  <tr key={employee.id} className={employee.isActive ? '' : 'bg-gray-50'}>\n                    {daysArray.map((day) => {\n                      const date = dateUtils.formatDateString(yearMonth[0], yearMonth[1], day);\n                      const dailyMinutes = getDailyData(employee.id, date, 'overtime');\n                      const vacationMinutes = getDailyData(employee.id, date, 'vacation');\n                      \n                      return (\n                        <td key={day} className={`px-2 py-2 text-center text-xs align-top relative ${employee.isActive ? 'bg-white' : 'bg-gray-50'}`}>\n                          <div className=\"absolute left-0 right-0 top-1/2 border-t border-gray-300 transform -translate-y-px\"></div>\n                          <div className=\"flex flex-col items-center justify-start h-full\">\n                            <div className=\"flex-1 flex items-center justify-center py-1\">\n                              <TimeDisplay \n                                value={dailyMinutes}\n                                onClick={() => handleTimeInputClick(employee.id, day, dailyMinutes, 'overtime')}\n                                disabled={!employee.isActive}\n                                color=\"blue\"\n                              />\n                            </div>\n                            <div className=\"flex-1 flex items-center justify-center py-1\">\n                              <TimeDisplay \n                                value={vacationMinutes}\n                                onClick={() => handleTimeInputClick(employee.id, day, vacationMinutes, 'vacation')}\n                                disabled={!employee.isActive}\n                                placeholder=\"00:00\"\n                                color=\"green\"\n                              />\n                            </div>\n                          </div>\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n              {getAllEmployeesWithRecords.length === 0 && (\n                <tr>\n                  <td colSpan={daysArray.length} className=\"px-6 py-8 text-center text-gray-500\">\n                    등록된 직원이 없습니다.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default FixedLayoutDashboard;\n